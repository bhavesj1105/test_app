version: '3.9'

services:
  db:
    image: postgres:16-alpine
    container_name: bakbak-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_DATABASE:-bakbak_db}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:4
    container_name: bakbak-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - db

  server:
    build:
      context: ./bakbak-server
      dockerfile: Dockerfile
    container_name: bakbak-server
    restart: unless-stopped
    env_file:
      - ./bakbak-server/.env.example
    environment:
      NODE_ENV: development
      PORT: 5000
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_DATABASE: ${DB_DATABASE:-bakbak_db}
      CLIENT_URL: http://localhost:3000
      CORS_ORIGIN: http://localhost:3000
      # synchronize schema in dev
      # TypeORM uses NODE_ENV to toggle synchronize in our config
    ports:
      - "${PORT:-5000}:5000"
    volumes:
      - ./bakbak-server/uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata:
